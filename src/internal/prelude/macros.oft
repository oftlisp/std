(module std/internal/prelude/macros
  [afn def defmacro defn list todo unless when]
  no-prelude)

(import std/internal/prelude/intrinsics
  [car cdr cons nil nil?])

(intrinsics:defmacro quasiquote form
  (std/internal/prelude/intrinsics:panic 'todo-quasiquote))

(intrinsics:defmacro def form
  (std/internal/prelude/intrinsics:panic 'todo-def))

(intrinsics:defmacro defmacro form
  (std/internal/prelude/intrinsics:panic 'todo-defmacro))

(intrinsics:defmacro defn form
  (std/internal/prelude/intrinsics:panic 'todo-defn))

(intrinsics:defmacro afn form
  ; This uses a self-calling lambda instead of a progn to avoid being inlined at the top level.
  `((fn () (defn $ ,@form) $)))

; TODO: Should this use the std/prelude versions instead?
(intrinsics:defmacro list form
  (intrinsics:defn helper (form)
    (if (nil? form)
      'std/internal/prelude/intrinsics:nil
      (cons 'std/internal/prelude/intrinsics:cons
        (cons (car form)
          (cons (helper (cdr form))
            nil)))))
  (helper form))

(intrinsics:defmacro todo form
  (intrinsics:def data 
    (if (nil? form)
      ''todo
      (if (nil? (cdr form))
        (list 'std/internal/prelude/intrinsics:cons ''todo (car form))
        (list 'std/internal/prelude/intrinsics:cons ''todo (cons 'list form)))))
  (list 'std/internal/prelude/intrinsics:panic data))

(defmacro unless (c b)
  `(if ,c std/internal/prelude/intrinsics:nil ,b))
(defmacro when (c b)
  `(if ,c ,b std/internal/prelude/intrinsics:nil))
