(module std/internal/examples/regex
  main)

(import std/parsing/regex
  regex-matches?)

(defn test (regex string should-match)
  (print "regex = `" regex "', string = `" string "', should-match = ")
  (println (if should-match "true" "false"))
  (assert-eq (regex-matches? regex string) should-match))

(defn main (args)
  (def tests (list
    (list "123"          ""      false)
    (list ""             "123"   false)
    (list "123"          "123"   true)
    (list "234"          "12345" false)
    (list ".234."        "12345" true)
    (list ".*234.*"      "12345" true)
    (list "(1)(2)(3)"    "123"   true)
    (list "()123"        "123"   true)
    (list "123()"        "123"   true)
    (list "12+3"         "13"    false)
    (list "12+3"         "123"   true)
    (list "12*3"         "123"   true)
    (list "12?3"         "13"    true)
    (list "12?3"         "123"   true)
    (list "12?3"         "1223"  false)
    (list "12+3"         "12223" true)
    (list "12|3"         "12"    true)
    (list "12|3"         "3"     true)
    (list ".2|4"         "42"    true)
    (list ".2|4"         "2"     false)
    (list ".2|4"         "4"     true)
    (list "1.3&.*2.*"    "123"   true)
    (list "1.3&.*2.*"    "124"   false)
    (list "12+3&1223.*"  "1223"  true)
    (list "!123"         "123"   false)
    (list "!123"         "124"   true)
    (list "!123"         ""      true)
    (list ""             ""      true)
    (list "()"           ""      true)
    (list "(|)"          ""      true)
    (list "()|"          ""      true)
    (list "|()"          ""      true)
    (list "|(|)|"        ""      true)))
  (for-each t tests
    (test (car t) (cadr t) (caddr t)))
  (println "All tests passed"))
