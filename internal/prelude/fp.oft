;; Functional programming primitives.
(module std/internal/prelude/fp
  filter
  foldl
  foldr
  for-each
  group-by
  map
  reverse)

(import std/internal/prelude/constants
  nil)
(import std/internal/prelude/utils/macros
  todo)
(import std/internal/primitives
  car
  cdr
  cons
  nil?
  panic)

(defn reverse (l)
  (defn helper (in out)
    (if (nil? in)
      out
      (helper (cdr in) (cons (car in) out))))
  (helper l nil))

(defn filter ()
  (todo))

(defn for-each (f l)
  (if (nil? l)
    nil
    (progn
      (f (car l))
      (for-each f (cdr l)))))

(defn foldl (f x xs)
  (if (nil? xs)
    x
    (foldl f (f x (car xs)) (cdr xs))))

(defn foldr (f x xs)
  (if (nil? xs)
    x
    (f x (foldr f (car xs) (cdr xs)))))

(defn for-each (f l)
  (if (nil? l)
    nil
    (progn
      (f (car l))
      (for-each f (cdr l)))))

(defn group-by ()
  (todo))

(defn map (f l)
  (defn helper (in out)
    (if (nil? in)
      (reverse out)
      (helper (cdr in) (cons (f (car in)) out))))
  (helper l nil))
